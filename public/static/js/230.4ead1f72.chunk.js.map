{"version":3,"file":"static/js/230.4ead1f72.chunk.js","mappings":"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","sources":["../node_modules/comlink/src/comlink.ts","../node_modules/react-py/dist/workers/python-console-worker.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport type { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\nexport const finalizer = Symbol(\"Comlink.finalizer\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nfunction isAllowedOrigin(\n  allowedOrigins: (string | RegExp)[],\n  origin: string\n): boolean {\n  for (const allowedOrigin of allowedOrigins) {\n    if (origin === allowedOrigin || allowedOrigin === \"*\") {\n      return true;\n    }\n    if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function expose(\n  obj: any,\n  ep: Endpoint = globalThis as any,\n  allowedOrigins: (string | RegExp)[] = [\"*\"]\n) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n      console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n          if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n            obj[finalizer]();\n          }\n        }\n      })\n      .catch((error) => {\n        // Send Serialization Error To Caller\n        const [wireValue, transferables] = toWireValue({\n          value: new TypeError(\"Unserializable return value\"),\n          [throwMarker]: 0,\n        });\n        ep.postMessage({ ...wireValue, id }, transferables);\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction releaseEndpoint(ep: Endpoint) {\n  return requestResponseMessage(ep, {\n    type: MessageType.RELEASE,\n  }).then(() => {\n    closeEndPoint(ep);\n  });\n}\n\ninterface FinalizationRegistry<T> {\n  new (cb: (heldValue: T) => void): FinalizationRegistry<T>;\n  register(\n    weakItem: object,\n    heldValue: T,\n    unregisterToken?: object | undefined\n  ): void;\n  unregister(unregisterToken: object): void;\n}\ndeclare var FinalizationRegistry: FinalizationRegistry<Endpoint>;\n\nconst proxyCounter = new WeakMap<Endpoint, number>();\nconst proxyFinalizers =\n  \"FinalizationRegistry\" in globalThis &&\n  new FinalizationRegistry((ep: Endpoint) => {\n    const newCount = (proxyCounter.get(ep) || 0) - 1;\n    proxyCounter.set(ep, newCount);\n    if (newCount === 0) {\n      releaseEndpoint(ep);\n    }\n  });\n\nfunction registerProxy(proxy: object, ep: Endpoint) {\n  const newCount = (proxyCounter.get(ep) || 0) + 1;\n  proxyCounter.set(ep, newCount);\n  if (proxyFinalizers) {\n    proxyFinalizers.register(proxy, ep, proxy);\n  }\n}\n\nfunction unregisterProxy(proxy: object) {\n  if (proxyFinalizers) {\n    proxyFinalizers.unregister(proxy);\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          unregisterProxy(proxy);\n          releaseEndpoint(ep);\n          isProxyReleased = true;\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  registerProxy(proxy, ep);\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T extends {}>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = globalThis,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimportScripts('https://cdn.jsdelivr.net/pyodide/v0.23.4/full/pyodide.js');\n// Monkey patch console.log to prevent the script from outputting logs\nif (self.location.hostname !== 'localhost') {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    console.log = function () { };\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    console.error = function () { };\n}\nimport { expose } from 'comlink';\nvar pythonConsole;\nvar reactPyModule = {\n    getInput: function (id, prompt) {\n        var request = new XMLHttpRequest();\n        // Synchronous request to be intercepted by service worker\n        request.open('GET', \"/react-py-get-input/?id=\".concat(id, \"&prompt=\").concat(prompt), false);\n        request.send(null);\n        return request.responseText;\n    }\n};\nvar python = {\n    init: function (stdout, onLoad, packages) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, micropip, id, version, namespace, initConsoleCode, patchInputCode, reprShorten, banner, awaitFut, pyconsole, clearConsole;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = self;\n                        return [4 /*yield*/, self.loadPyodide({})];\n                    case 1:\n                        _a.pyodide = _b.sent();\n                        return [4 /*yield*/, self.pyodide.loadPackage(['pyodide-http'])];\n                    case 2:\n                        _b.sent();\n                        if (!(packages[0].length > 0)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, self.pyodide.loadPackage(packages[0])];\n                    case 3:\n                        _b.sent();\n                        _b.label = 4;\n                    case 4:\n                        if (!(packages[1].length > 0)) return [3 /*break*/, 7];\n                        return [4 /*yield*/, self.pyodide.loadPackage(['micropip'])];\n                    case 5:\n                        _b.sent();\n                        micropip = self.pyodide.pyimport('micropip');\n                        return [4 /*yield*/, micropip.install(packages[1])];\n                    case 6:\n                        _b.sent();\n                        _b.label = 7;\n                    case 7:\n                        id = self.crypto.randomUUID();\n                        version = self.pyodide.version;\n                        self.pyodide.registerJsModule('react_py', reactPyModule);\n                        namespace = self.pyodide.globals.get('dict')();\n                        initConsoleCode = \"\\nimport pyodide_http\\npyodide_http.patch_all()\\n\\nimport sys\\nfrom pyodide.ffi import to_js\\nfrom pyodide.console import PyodideConsole, repr_shorten, BANNER\\nimport __main__\\nBANNER = \\\"Welcome to the Pyodide terminal emulator \\uD83D\\uDC0D\\\\n\\\" + BANNER\\npyconsole = PyodideConsole(__main__.__dict__)\\nimport builtins\\nasync def await_fut(fut):\\n  res = await fut\\n  if res is not None:\\n    builtins._ = res\\n  return to_js([res], depth=1)\\ndef clear_console():\\n  pyconsole.buffer = []\\n\";\n                        return [4 /*yield*/, self.pyodide.runPythonAsync(initConsoleCode, { globals: namespace })];\n                    case 8:\n                        _b.sent();\n                        patchInputCode = \"\\nimport sys, builtins\\nimport react_py\\n__prompt_str__ = \\\"\\\"\\ndef get_input(prompt=\\\"\\\"):\\n    global __prompt_str__\\n    __prompt_str__ = prompt\\n    print(prompt, end=\\\"\\\")\\n    s = react_py.getInput(\\\"\".concat(id, \"\\\", prompt)\\n    print()\\n    return s\\nbuiltins.input = get_input\\nsys.stdin.readline = lambda: react_py.getInput(\\\"\").concat(id, \"\\\", __prompt_str__)\\n\");\n                        return [4 /*yield*/, self.pyodide.runPythonAsync(patchInputCode, { globals: namespace })];\n                    case 9:\n                        _b.sent();\n                        reprShorten = namespace.get('repr_shorten');\n                        banner = namespace.get('BANNER');\n                        awaitFut = namespace.get('await_fut');\n                        pyconsole = namespace.get('pyconsole');\n                        clearConsole = namespace.get('clear_console');\n                        namespace.destroy();\n                        // eslint-disable-next-line camelcase\n                        pyconsole.stdout_callback = stdout;\n                        pythonConsole = {\n                            reprShorten: reprShorten,\n                            awaitFut: awaitFut,\n                            pyconsole: pyconsole,\n                            clearConsole: clearConsole\n                        };\n                        onLoad({ id: id, version: version, banner: banner });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    },\n    run: function (code) {\n        return __awaiter(this, void 0, void 0, function () {\n            var state, _a, _b, line, fut, wrapped, _c, value, error_1, message, e_1_1;\n            var e_1, _d;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        if (!pythonConsole) {\n                            throw new Error('Console has not been initialised');\n                        }\n                        if (code === undefined) {\n                            throw new Error('No code to push');\n                        }\n                        _e.label = 1;\n                    case 1:\n                        _e.trys.push([1, 9, 10, 11]);\n                        _a = __values(code.split('\\n')), _b = _a.next();\n                        _e.label = 2;\n                    case 2:\n                        if (!!_b.done) return [3 /*break*/, 8];\n                        line = _b.value;\n                        fut = pythonConsole.pyconsole.push(line);\n                        state = fut.syntax_check;\n                        wrapped = pythonConsole.awaitFut(fut);\n                        _e.label = 3;\n                    case 3:\n                        _e.trys.push([3, 5, 6, 7]);\n                        return [4 /*yield*/, wrapped];\n                    case 4:\n                        _c = __read.apply(void 0, [_e.sent(), 1]), value = _c[0];\n                        if (self.pyodide.isPyProxy(value)) {\n                            value.destroy();\n                        }\n                        return [3 /*break*/, 7];\n                    case 5:\n                        error_1 = _e.sent();\n                        if (error_1.constructor.name === 'PythonError') {\n                            message = fut.formatted_error || error_1.message;\n                            return [2 /*return*/, { state: state, error: message.trimEnd() }];\n                        }\n                        else {\n                            throw error_1;\n                        }\n                        return [3 /*break*/, 7];\n                    case 6:\n                        fut.destroy();\n                        wrapped.destroy();\n                        return [7 /*endfinally*/];\n                    case 7:\n                        _b = _a.next();\n                        return [3 /*break*/, 2];\n                    case 8: return [3 /*break*/, 11];\n                    case 9:\n                        e_1_1 = _e.sent();\n                        e_1 = { error: e_1_1 };\n                        return [3 /*break*/, 11];\n                    case 10:\n                        try {\n                            if (_b && !_b.done && (_d = _a.return)) _d.call(_a);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                        return [7 /*endfinally*/];\n                    case 11: return [2 /*return*/, { state: state }];\n                }\n            });\n        });\n    },\n    readFile: function (name) {\n        return self.pyodide.FS.readFile(name, { encoding: 'utf8' });\n    },\n    writeFile: function (name, data) {\n        return self.pyodide.FS.writeFile(name, data, { encoding: 'utf8' });\n    },\n    mkdir: function (name) {\n        self.pyodide.FS.mkdir(name);\n    },\n    rmdir: function (name) {\n        self.pyodide.FS.rmdir(name);\n    }\n};\nexpose(python);\n"],"names":["proxyMarker","Symbol","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","obj","port1","port2","MessageChannel","expose","deserialize","port","start","createProxy","target","value","_ref","serialized","Error","isError","message","name","stack","Object","assign","ep","arguments","length","undefined","globalThis","allowedOrigins","addEventListener","callback","ev","data","origin","allowedOrigin","RegExp","test","isAllowedOrigin","console","warn","concat","id","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","prop","rawValue","apply","proxy","transfers","transferCache","set","transfer","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","error","TypeError","endpoint","constructor","isMessagePort","close","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","WeakMap","proxyFinalizers","FinalizationRegistry","newCount","get","isProxyReleased","Proxy","_target","unregister","unregisterProxy","r","p","toString","bind","_thisArg","rawArgumentList","last","processArguments","construct","register","registerProxy","processed","v","arr","Array","prototype","handler","serializedValue","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","pythonConsole","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","e","rejected","result","done","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","iterator","this","n","op","call","pop","push","__values","o","s","m","i","__read","ar","importScripts","self","location","hostname","log","reactPyModule","getInput","prompt","request","XMLHttpRequest","open","send","responseText","init","stdout","onLoad","packages","_a","version","namespace","patchInputCode","reprShorten","banner","awaitFut","pyconsole","clearConsole","_b","loadPyodide","pyodide","loadPackage","pyimport","install","crypto","randomUUID","registerJsModule","globals","runPythonAsync","destroy","stdout_callback","run","code","state","line","fut","wrapped","_c","error_1","e_1_1","e_1","_d","_e","split","syntax_check","isPyProxy","formatted_error","trimEnd","return","readFile","FS","encoding","writeFile","mkdir","rmdir"],"sourceRoot":""}