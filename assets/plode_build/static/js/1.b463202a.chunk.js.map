{"version":3,"sources":["Components/FirmwareJSPCv1/targets/esp32c3.js"],"names":["ESP32C3ROM","_d2h","d","h","toString","length","_class","CHIP_NAME","IMAGE_CHIP_ID","EFUSE_BASE","MAC_EFUSE_REG","UART_CLKDIV_REG","UART_CLKDIV_MASK","UART_DATE_REG_ADDR","FLASH_WRITE_SIZE","BOOTLOADER_FLASH_OFFSET","FLASH_SIZES","SPI_REG_BASE","SPI_USR_OFFS","SPI_USR1_OFFS","SPI_USR2_OFFS","SPI_MOSI_DLEN_OFFS","SPI_MISO_DLEN_OFFS","SPI_W0_OFFS","TEXT_START","ENTRY","DATA_START","ROM_DATA","ROM_TEXT","get_pkg_version","async","addr","loader","read_reg","get_chip_revision","get_chip_description","desc","get_chip_features","get_crystal_freq","read_mac","mac0","mac1","mac","Uint8Array","get_erase_size","offset","size"],"mappings":"oKAAe,MAAMA,EAoInB,WAAOC,CAAKC,GACV,IAAIC,IAAMD,GAAGE,SAAS,IACtB,OAAoB,IAAbD,EAAEE,OAAe,IAAMF,EAAIA,CACpC,EAiCDG,EAxKoBN,IACZO,UAAY,WADAP,EAEZQ,cAAgB,EAFJR,EAGZS,WAAa,WAHDT,EAIZU,cAAgBJ,EAAKG,WAAa,GAJtBT,EAKZW,gBAAkB,WALNX,EAMZY,iBAAmB,QANPZ,EAOZa,mBAAqB,WAPTb,EASZc,iBAAmB,KATPd,EAUZe,wBAA0B,KAVdf,EAYZgB,YAAc,CACnB,MAAO,EACP,MAAO,GACP,MAAO,GACP,MAAO,GACP,OAAQ,IAjBShB,EAoBZiB,aAAe,WApBHjB,EAqBZkB,aAAe,GArBHlB,EAsBZmB,cAAgB,GAtBJnB,EAuBZoB,cAAgB,GAvBJpB,EAwBZqB,mBAAqB,GAxBTrB,EAyBZsB,mBAAqB,GAzBTtB,EA0BZuB,YAAc,GA1BFvB,EA4BZwB,WAAa,WA5BDxB,EA6BZyB,MAAQ,WA7BIzB,EA8BZ0B,WAAa,WA9BD1B,EA+BZ2B,SAAW,WA/BC3B,EAgCZ4B,SACL,unHAjCiB5B,EA6FZ6B,gBAAkBC,UACvB,IAEIC,EADczB,EAAKG,WAAa,GACX,GAGzB,aAFkBuB,EAAOC,SAAS,CAAEF,KAAMA,KACd,GAAM,CAChB,EAnGD/B,EAsGZkC,kBAAoBJ,UACzB,IAGIC,EAHczB,EAAKG,WAAa,GAGX,GAEzB,aADkBuB,EAAOC,SAAS,CAAEF,KAAMA,IAAY,GAF5C,OAGA,EA5GO/B,EA+GZmC,qBAAuBL,UAC5B,IAAIM,EASJ,OANEA,EADc,UADI9B,EAAKuB,gBAAgBG,GAEhC,WAEA,mBAGTI,GAAQ,oBADa9B,EAAK4B,kBAAkBF,GACT,GACxB,EAzHMhC,EA4HZqC,kBAAoBP,SAClB,CAAC,SA7HS9B,EAgIZsC,iBAAmBR,SACjB,GAjIU9B,EAyIZuC,SAAWT,UAChB,IAAIU,QAAaR,EAAOC,SAAS,CAAEF,KAAMzB,EAAKI,gBAC9C8B,KAAgB,EAChB,IAAIC,QAAaT,EAAOC,SAAS,CAAEF,KAAMzB,EAAKI,cAAgB,IAC9D+B,EAAQA,IAAS,EAAK,MACtB,IAAIC,EAAM,IAAIC,WAAW,GAQzB,OAPAD,EAAI,GAAMD,GAAQ,EAAK,IACvBC,EAAI,GAAY,IAAPD,EACTC,EAAI,GAAMF,GAAQ,GAAM,IACxBE,EAAI,GAAMF,GAAQ,GAAM,IACxBE,EAAI,GAAMF,GAAQ,EAAK,IACvBE,EAAI,GAAY,IAAPF,EAGPlC,EAAKL,KAAKyC,EAAI,IACd,IACApC,EAAKL,KAAKyC,EAAI,IACd,IACApC,EAAKL,KAAKyC,EAAI,IACd,IACApC,EAAKL,KAAKyC,EAAI,IACd,IACApC,EAAKL,KAAKyC,EAAI,IACd,IACApC,EAAKL,KAAKyC,EAAI,GAAG,EAjKF1C,EAqKZ4C,eAAiB,SAAUC,EAAQC,GACxC,OAAOA,CACT,C","file":"static/js/1.b463202a.chunk.js","sourcesContent":["export default class ESP32C3ROM {\n  static CHIP_NAME = \"ESP32-C3\";\n  static IMAGE_CHIP_ID = 5;\n  static EFUSE_BASE = 0x60008800;\n  static MAC_EFUSE_REG = this.EFUSE_BASE + 0x044;\n  static UART_CLKDIV_REG = 0x3ff40014;\n  static UART_CLKDIV_MASK = 0xfffff;\n  static UART_DATE_REG_ADDR = 0x6000007c;\n\n  static FLASH_WRITE_SIZE = 0x400;\n  static BOOTLOADER_FLASH_OFFSET = 0x1000;\n\n  static FLASH_SIZES = {\n    \"1MB\": 0x00,\n    \"2MB\": 0x10,\n    \"4MB\": 0x20,\n    \"8MB\": 0x30,\n    \"16MB\": 0x40,\n  };\n\n  static SPI_REG_BASE = 0x60002000;\n  static SPI_USR_OFFS = 0x18;\n  static SPI_USR1_OFFS = 0x1c;\n  static SPI_USR2_OFFS = 0x20;\n  static SPI_MOSI_DLEN_OFFS = 0x24;\n  static SPI_MISO_DLEN_OFFS = 0x28;\n  static SPI_W0_OFFS = 0x58;\n\n  static TEXT_START = 0x40380000;\n  static ENTRY = 0x403805c8;\n  static DATA_START = 0x3fc96ba8;\n  static ROM_DATA = \"DEDIPw==\";\n  static ROM_TEXT =\n    \"\" +\n    \"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\";\n\n  static get_pkg_version = async (loader) => {\n    var num_word = 3;\n    var block1_addr = this.EFUSE_BASE + 0x044;\n    var addr = block1_addr + 4 * num_word;\n    var word3 = await loader.read_reg({ addr: addr });\n    var pkg_version = (word3 >> 21) & 0x07;\n    return pkg_version;\n  };\n\n  static get_chip_revision = async (loader) => {\n    var block1_addr = this.EFUSE_BASE + 0x044;\n    var num_word = 3;\n    var pos = 18;\n    var addr = block1_addr + 4 * num_word;\n    var ret = ((await loader.read_reg({ addr: addr })) & (0x7 << pos)) >> pos;\n    return ret;\n  };\n\n  static get_chip_description = async (loader) => {\n    var desc;\n    var pkg_ver = await this.get_pkg_version(loader);\n    if (pkg_ver === 0) {\n      desc = \"ESP32-C3\";\n    } else {\n      desc = \"unknown ESP32-C3\";\n    }\n    var chip_rev = await this.get_chip_revision(loader);\n    desc += \" (revision \" + chip_rev + \")\";\n    return desc;\n  };\n\n  static get_chip_features = async (loader) => {\n    return [\"Wi-Fi\"];\n  };\n\n  static get_crystal_freq = async (loader) => {\n    return 40;\n  };\n\n  static _d2h(d) {\n    var h = (+d).toString(16);\n    return h.length === 1 ? \"0\" + h : h;\n  }\n\n  static read_mac = async (loader) => {\n    var mac0 = await loader.read_reg({ addr: this.MAC_EFUSE_REG });\n    mac0 = mac0 >>> 0;\n    var mac1 = await loader.read_reg({ addr: this.MAC_EFUSE_REG + 4 });\n    mac1 = (mac1 >>> 0) & 0x0000ffff;\n    var mac = new Uint8Array(6);\n    mac[0] = (mac1 >> 8) & 0xff;\n    mac[1] = mac1 & 0xff;\n    mac[2] = (mac0 >> 24) & 0xff;\n    mac[3] = (mac0 >> 16) & 0xff;\n    mac[4] = (mac0 >> 8) & 0xff;\n    mac[5] = mac0 & 0xff;\n\n    return (\n      this._d2h(mac[0]) +\n      \":\" +\n      this._d2h(mac[1]) +\n      \":\" +\n      this._d2h(mac[2]) +\n      \":\" +\n      this._d2h(mac[3]) +\n      \":\" +\n      this._d2h(mac[4]) +\n      \":\" +\n      this._d2h(mac[5])\n    );\n  };\n\n  static get_erase_size = function (offset, size) {\n    return size;\n  };\n}\n"],"sourceRoot":""}