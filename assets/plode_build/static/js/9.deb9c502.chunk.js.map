{"version":3,"sources":["Components/FirmwareJSPCv1/targets/esp32.js"],"names":["ESP32ROM","_d2h","d","h","toString","length","_class","CHIP_NAME","IMAGE_CHIP_ID","EFUSE_RD_REG_BASE","DR_REG_SYSCON_BASE","UART_CLKDIV_REG","UART_CLKDIV_MASK","UART_DATE_REG_ADDR","XTAL_CLK_DIVIDER","FLASH_WRITE_SIZE","BOOTLOADER_FLASH_OFFSET","FLASH_SIZES","SPI_REG_BASE","SPI_USR_OFFS","SPI_USR1_OFFS","SPI_USR2_OFFS","SPI_W0_OFFS","SPI_MOSI_DLEN_OFFS","SPI_MISO_DLEN_OFFS","TEXT_START","ENTRY","DATA_START","ROM_DATA","ROM_TEXT","read_efuse","async","loader","offset","addr","console","log","read_reg","get_pkg_version","word3","pkg_version","get_chip_revision","word5","apb_ctl_date","get_chip_description","chip_desc","chip_name","chip_revision","rev3","get_chip_features","features","push","includes","coding_scheme","get_crystal_freq","norm_xtal","uart_div","ets_xtal","transport","baudrate","Math","abs","read_mac","mac0","mac1","mac","Uint8Array","get_erase_size","size"],"mappings":"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","file":"static/js/9.deb9c502.chunk.js","sourcesContent":["export default class ESP32ROM {\n  static CHIP_NAME = \"ESP32\";\n  static IMAGE_CHIP_ID = 0;\n  static EFUSE_RD_REG_BASE = 0x3ff5a000;\n  static DR_REG_SYSCON_BASE = 0x3ff66000;\n  static UART_CLKDIV_REG = 0x3ff40014;\n  static UART_CLKDIV_MASK = 0xfffff;\n  static UART_DATE_REG_ADDR = 0x60000078;\n  static XTAL_CLK_DIVIDER = 1;\n\n  static FLASH_WRITE_SIZE = 0x400;\n  static BOOTLOADER_FLASH_OFFSET = 0x1000;\n\n  static FLASH_SIZES = {\n    \"1MB\": 0x00,\n    \"2MB\": 0x10,\n    \"4MB\": 0x20,\n    \"8MB\": 0x30,\n    \"16MB\": 0x40,\n  };\n\n  static SPI_REG_BASE = 0x3ff42000;\n  static SPI_USR_OFFS = 0x1c;\n  static SPI_USR1_OFFS = 0x20;\n  static SPI_USR2_OFFS = 0x24;\n  static SPI_W0_OFFS = 0x80;\n  static SPI_MOSI_DLEN_OFFS = 0x28;\n  static SPI_MISO_DLEN_OFFS = 0x2c;\n\n  static TEXT_START = 0x400be000;\n  static ENTRY = 0x400be598;\n  static DATA_START = 0x3ffdeba8;\n  static ROM_DATA = \"CMD8Pw==\";\n  static ROM_TEXT =\n    \"\" +\n    \"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\" +\n    \"wqvdldrZOj9LCYJ8mer+L0DR4a0UDQAA\";\n\n  static read_efuse = async (loader, offset) => {\n    var addr = this.EFUSE_RD_REG_BASE + 4 * offset;\n    console.log(\"Read efuse \" + addr);\n    return await loader.read_reg({ addr: addr });\n  };\n\n  static get_pkg_version = async (loader) => {\n    var word3 = await this.read_efuse(loader, 3);\n    var pkg_version = (word3 >> 9) & 0x07;\n    pkg_version += ((word3 >> 2) & 0x1) << 3;\n    return pkg_version;\n  };\n\n  static get_chip_revision = async (loader) => {\n    var word3 = await this.read_efuse(loader, 3);\n    var word5 = await this.read_efuse(loader, 5);\n    var apb_ctl_date = await loader.read_reg({\n      addr: this.DR_REG_SYSCON_BASE + 0x7c,\n    });\n\n    var rev_bit0 = (word3 >> 15) & 0x1;\n    var rev_bit1 = (word5 >> 20) & 0x1;\n    var rev_bit2 = (apb_ctl_date >> 31) & 0x1;\n    if (rev_bit0 != 0) {\n      if (rev_bit1 != 0) {\n        if (rev_bit2 != 0) {\n          return 3;\n        } else {\n          return 2;\n        }\n      } else {\n        return 1;\n      }\n    }\n    return 0;\n  };\n\n  static get_chip_description = async (loader) => {\n    var chip_desc = [\n      \"ESP32-D0WDQ6\",\n      \"ESP32-D0WD\",\n      \"ESP32-D2WD\",\n      \"\",\n      \"ESP32-U4WDH\",\n      \"ESP32-PICO-D4\",\n      \"ESP32-PICO-V3-02\",\n    ];\n    var chip_name = \"\";\n    var pkg_version = await this.get_pkg_version(loader);\n    var chip_revision = await this.get_chip_revision(loader);\n    var rev3 = chip_revision == 3;\n    var single_core = (await this.read_efuse(loader, 3)) & (1 << 0);\n\n    if (single_core != 0) {\n      chip_desc[0] = \"ESP32-S0WDQ6\";\n      chip_desc[1] = \"ESP32-S0WD\";\n    }\n    if (rev3) {\n      chip_desc[5] = \"ESP32-PICO-V3\";\n    }\n    if (pkg_version >= 0 && pkg_version <= 6) {\n      chip_name = chip_desc[pkg_version];\n    } else {\n      chip_name = \"Unknown ESP32\";\n    }\n\n    if (rev3 && (pkg_version === 0 || pkg_version === 1)) {\n      chip_name += \"-V3\";\n    }\n    return chip_name + \" (revision \" + chip_revision + \")\";\n  };\n\n  static get_chip_features = async (loader) => {\n    var features = [\"Wi-Fi\"];\n    var word3 = await this.read_efuse(loader, 3);\n\n    var chip_ver_dis_bt = word3 & (1 << 1);\n    if (chip_ver_dis_bt === 0) {\n      features.push(\" BT\");\n    }\n\n    var chip_ver_dis_app_cpu = word3 & (1 << 0);\n    if (chip_ver_dis_app_cpu !== 0) {\n      features.push(\" Single Core\");\n    } else {\n      features.push(\" Dual Core\");\n    }\n\n    var chip_cpu_freq_rated = word3 & (1 << 13);\n    if (chip_cpu_freq_rated !== 0) {\n      var chip_cpu_freq_low = word3 & (1 << 12);\n      if (chip_cpu_freq_low !== 0) {\n        features.push(\" 160MHz\");\n      } else {\n        features.push(\" 240MHz\");\n      }\n    }\n\n    var pkg_version = await this.get_pkg_version(loader);\n    if ([2, 4, 5, 6].includes(pkg_version)) {\n      features.push(\" Embedded Flash\");\n    }\n\n    if (pkg_version === 6) {\n      features.push(\" Embedded PSRAM\");\n    }\n\n    var word4 = await this.read_efuse(loader, 4);\n    var adc_vref = (word4 >> 8) & 0x1f;\n    if (adc_vref !== 0) {\n      features.push(\" VRef calibration in efuse\");\n    }\n\n    var blk3_part_res = (word3 >> 14) & 0x1;\n    if (blk3_part_res !== 0) {\n      features.push(\" BLK3 partially reserved\");\n    }\n\n    var word6 = await this.read_efuse(loader, 6);\n    var coding_scheme = word6 & 0x3;\n    var coding_scheme_arr = [\"None\", \"3/4\", \"Repeat (UNSUPPORTED)\", \"Invalid\"];\n    features.push(\" Coding Scheme \" + coding_scheme_arr[coding_scheme]);\n\n    return features;\n  };\n\n  static get_crystal_freq = async (loader) => {\n    var uart_div =\n      (await loader.read_reg({ addr: this.UART_CLKDIV_REG })) &\n      this.UART_CLKDIV_MASK;\n    var ets_xtal =\n      (loader.transport.baudrate * uart_div) / 1000000 / this.XTAL_CLK_DIVIDER;\n    var norm_xtal;\n    if (ets_xtal > 33) {\n      norm_xtal = 40;\n    } else {\n      norm_xtal = 26;\n    }\n    if (Math.abs(norm_xtal - ets_xtal) > 1) {\n      loader.log(\"WARNING: Unsupported crystal in use\");\n    }\n    return norm_xtal;\n  };\n\n  static _d2h(d) {\n    var h = (+d).toString(16);\n    return h.length === 1 ? \"0\" + h : h;\n  }\n\n  static read_mac = async (loader) => {\n    var mac0 = await this.read_efuse(loader, 1);\n    mac0 = mac0 >>> 0;\n    var mac1 = await this.read_efuse(loader, 2);\n    mac1 = mac1 >>> 0;\n    var mac = new Uint8Array(6);\n    mac[0] = (mac1 >> 8) & 0xff;\n    mac[1] = mac1 & 0xff;\n    mac[2] = (mac0 >> 24) & 0xff;\n    mac[3] = (mac0 >> 16) & 0xff;\n    mac[4] = (mac0 >> 8) & 0xff;\n    mac[5] = mac0 & 0xff;\n\n    return (\n      this._d2h(mac[0]) +\n      \":\" +\n      this._d2h(mac[1]) +\n      \":\" +\n      this._d2h(mac[2]) +\n      \":\" +\n      this._d2h(mac[3]) +\n      \":\" +\n      this._d2h(mac[4]) +\n      \":\" +\n      this._d2h(mac[5])\n    );\n  };\n\n  static get_erase_size = function (offset, size) {\n    return size;\n  };\n}\n"],"sourceRoot":""}